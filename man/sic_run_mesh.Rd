% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sic_run_fortran.R
\name{sic_run_mesh}
\alias{sic_run_mesh}
\alias{sic_run_steady}
\alias{sic_run_unsteady}
\title{Run Talweg, Fluvia or Sirene for a configured project}
\usage{
sic_run_mesh(cfg, params = list())

sic_run_steady(cfg, scenario, variant = 0, sicInputs = NULL, params = list())

sic_run_unsteady(
  cfg,
  scenario = iniParams[4],
  variant = iniParams[5],
  sicInputs = NULL,
  iniParams = NULL,
  params = list()
)
}
\arguments{
\item{cfg}{a \link{config} object. Configuration to use. See \link{loadConfig} for details}

\item{params}{\link{list} or \link{character}, see details}

\item{scenario}{\link{numeric}, the scenario to use}

\item{variant}{\link{numeric}, the variant to use (0 by default means no variant)}

\item{sicInputs}{A \link{SicInput} object or a list of \link{SicInput} objects create by \link{merge.SicInput}
used to create a PAR file injectig inputs for the simulation}

\item{iniParams}{5-length \link{numeric} \link{vector}, see \link{set_initial_conditions} for details}
}
\value{
Error code returned by \link{shell}.
}
\description{
Use \code{sic_run_mesh} to run the mesh generator, \code{sic_run_steady} for steady flow
simulation, and \code{sic_run_unsteady} for unsteady flow simulation.
}
\details{
The argument \code{params} handles the parameters describe in
\href{https://sic.g-eau.fr/Execution-de-TALWEG-FLUVIA-et}{SIC documentation}.
If argument \code{params} is a \link{list}, arguments are injected in the command line
by taking the items of the list with the conversion \verb{[key]=[value]}.
By default, the parameter \code{INTERF=0} is added to the command line.
If argument \code{params} is a \link{character} string it is directly used as parameters of the command line.
}
\examples{
\dontrun{
# Set up the configuration model
cfg <- cfg_tmp_project()

# Generate the mesh of the model
sic_run_mesh(cfg)

# Run steady simulation for the scenario #1
sic_run_steady(cfg, scenario = 1)

# Import initial condition from scenario 1
# to scenario 1, variant 1 for unsteady flow simulation
set_initial_conditions(c(1, 0, 0, 1, 1), cfg = cfg)

# Run unsteady flow simulation
sic_run_unsteady(cfg, scenario = 1, variant = 1)

# Or initiate and run the same unsteady flow simulation in one call
sic_run_unsteady(cfg, iniParams = c(1, 0, 0, 1, 1))
}
}

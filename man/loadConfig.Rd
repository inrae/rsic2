% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/loadConfig.R
\name{loadConfig}
\alias{loadConfig}
\title{Read default configuration of the package and complete it with eventual user config}
\usage{
loadConfig(
  sic_path = NULL,
  xml_path = NULL,
  userFile = "config.yml",
  pathDefaultCfg = system.file("config.yml", package = "rsic2")
)
}
\arguments{
\item{sic_path}{\link{character}, the path to an installation of SIC (see details)}

\item{xml_path}{\link{character}, the path of the XML project file (see details)}

\item{userFile}{location of the user config YML file}

\item{pathDefaultCfg}{The location of the default configuration (located in "inst/config.yml" of the package by default)}
}
\value{
A configuration as it is returned by \link[config:get]{config::get}.

Configuration of RSIC2 as the following structure:
\itemize{
\item \code{sic}
\itemize{
\item \code{path}: Path of local SIC installation (should be defined by \code{sic_path} parameter or in the user config file)
\item \code{edisic}: sub-path to EdiSIC program
\item \code{talweg}: sub-path to TALWEG program
\item \code{fluvia}: sub-path to FLUVIA program
\item \code{sirene}: sub-path to SIRENE program
\item \code{export}: sub-path to SicExport program
\item \code{fortran}:
\itemize{
\item \code{prms}:
\itemize{
\item \code{INTERF}: default \code{INTERF} parameter injected in command line arguments of TALWEG, FLUVIA, SIRENE
}
}
}
\item \code{project}
\itemize{
\item \code{path}: Path to the XML project file (should be defined by \code{xml_path} parameter or in the user config file)
\item \code{stricklers}: A vector of 2 \link{numeric} values representing respectively
the default minor and medium bed Strickler coefficients to apply with \link{sic_import_reaches}
}
}
}
\description{
Read default configuration of the package and complete it with eventual user config
}
\details{
The path to SIC and to the XML project file can be defined in the user XML file by defining the appropriate items:\if{html}{\out{<div class="sourceCode yaml">}}\preformatted{sic:
  path: Path/To/SIC/installation
project:
  path: Path/To/Xml/Project/File.xml
}\if{html}{\out{</div>}}

Moreover, the \code{sic_path} can be defined with the environment variable "SICPATH".
This setting is a default which is overwritten by the path defined in the user YAML file,
which is also overwritten by the one define by the \code{sic_path} argument.
}
\examples{
library(rsic2)
sic_path <- tempdir(check = TRUE)
xml_path <- R.utils::tmpfile()
cfg <- loadConfig(sic_path, xml_path)
str(cfg)
}
